{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","upload","selector","options","input","document","querySelector","preview","createElement","classList","add","open","textContent","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","files","length","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","src","result","insertAdjacentHTML","name","size","readAsDataURL","addEventListener"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (!bytes){\r\n        return '0 Byte'\r\n    } \r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\r\n }\r\n\r\n\r\nexport function upload(selector, options = {}){\r\n    const input = document.querySelector(selector)\r\n    const preview = document.createElement('div')\r\n    preview.classList.add('preview')\r\n\r\n\r\n    const open = document.createElement('button')\r\n    open.classList.add('btn')\r\n    open.textContent = 'Открыть'\r\n\r\n    if(options.multi){\r\n        input.setAttribute('multiple', true)\r\n    }\r\n\r\n    if(options.accept && Array.isArray(options.accept)){\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview)\r\n    input.insertAdjacentElement('afterend', open)\r\n\r\n\r\n\r\n\r\n    const triggerInput = () => input.click()\r\n\r\n    const changeHandler = event => {\r\n        if(!event.target.files.length){\r\n            return \r\n        }\r\n\r\n        const files = Array.from(event.target.files)\r\n        \r\n        preview.innerHTML = ''\r\n\r\n        files.forEach(file => {\r\n            if(!file.type.match('image')){\r\n                return\r\n            }\r\n        \r\n\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = ev => {\r\n                const src = ev.target.result\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n                    <div class=\"preview-image\">\r\n                        <div class=\"preview-remove\">&times;</div>\r\n                        <img src=\"${src}\" alt=\"${file.name}\"/>\r\n                        <div class=\"preview-info\">\r\n                            <span>test.jpg</span>\r\n                            ${bytesToSize(file.size)}\r\n                        </div>\r\n                    </div>\r\n                `)\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n        \r\n    }\r\n\r\n    open.addEventListener('click', triggerInput)\r\n    input.addEventListener('change', changeHandler)\r\n}","import {upload} from'./upload'\r\n\r\nupload('#file', {\r\n    multi: true,\r\n    accept: ['.png', '.jpg', '.jpeg', 'gif'],\r\n})"]}